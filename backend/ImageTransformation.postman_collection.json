{
	"info": {
		"_postman_id": "65e85031-3051-4349-bcab-4052e9493433",
		"name": "ImageTransformation",
		"description": "This API contains all requests available in the backend for Team Lion's image transformation web application. These requests include all functionalities including user authentication, retrieving and uploading images into the database.\n\nNote: The Authorization token expires after some amount of time so it needs to be renewed by logging in again",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Sets the accessToken for the collection",
							"pm.collectionVariables.set(\"accessToken\", JSON.parse(responseBody).tokens.access_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"demoUser\",\n    \"password\": \"password\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				},
				"description": "Request to login with a registered user's credentials"
			},
			"response": []
		},
		{
			"name": "Logout",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/logout",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"logout"
					]
				},
				"description": "Request to logout a user. Currently this endpoint doesn't do anything because in a token based authentication, invalidating a token would require a lot of effort"
			},
			"response": []
		},
		{
			"name": "Register",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"user2@gmail.edu\",\n    \"password\": \"password\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Save video",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "video",
							"type": "file",
							"src": "/Users/aman/Downloads/Webapp Hardcode Files/sample5.mp4"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/videos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"videos"
					]
				}
			},
			"response": []
		},
		{
			"name": "List all video filenames",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/videos?limit=25&offset=0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"videos"
					],
					"query": [
						{
							"key": "limit",
							"value": "25",
							"description": "Maximum number of images to be returned"
						},
						{
							"key": "offset",
							"value": "0",
							"description": "Offset to start returning images from"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Video by name",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/videos/671ece52-633b-4f4e-9194-ebfb38245e8f.mp4",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"videos",
						"671ece52-633b-4f4e-9194-ebfb38245e8f.mp4"
					]
				},
				"description": "Publicly accessible link to any image stored in the app"
			},
			"response": []
		},
		{
			"name": "Delete by name",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/videos/83259d3a-7546-4abf-a2fe-c595b48e6815.mp4",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"videos",
						"83259d3a-7546-4abf-a2fe-c595b48e6815.mp4"
					]
				}
			},
			"response": []
		},
		{
			"name": "Transform Image",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "image",
							"type": "file",
							"src": "/Users/aman/Desktop/ACMProject-Fall21/fa21-lion/backend/sampleImages/05000.png"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/transform",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"transform"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://127.0.0.1:5000"
		},
		{
			"key": "accessToken",
			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTY0MDc3MDc4NCwianRpIjoiMmMwZmY5ZWQtNjllZi00YWYzLTlkYTEtZDg0OGZkNDBhZjI5IiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImFrYWdAZ21haWwuZWR1IiwibmJmIjoxNjQwNzcwNzg0LCJleHAiOjE2NDA3NzE2ODR9.KQ83TdM08h0fwusa7CNSwQ1Cervn7YTrrkNruI1N_Zc"
		}
	]
}